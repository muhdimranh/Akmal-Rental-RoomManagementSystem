// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Viho.web.DataDB;

#nullable disable

namespace Viho.web.Migrations
{
    [DbContext(typeof(DbRentalContext))]
    [Migration("20230604213141_CreateRemindersTable")]
    partial class CreateRemindersTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Viho.web.DataDB.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReminderDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("Viho.web.DataDB.TbAttendance", b =>
                {
                    b.Property<int>("AttId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("att_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttId"));

                    b.Property<byte[]>("AttDate")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("att_date");

                    b.Property<int>("AttLid")
                        .HasColumnType("int")
                        .HasColumnName("att_lid");

                    b.HasKey("AttId");

                    b.HasIndex("AttLid");

                    b.ToTable("tb_attendance", (string)null);
                });

            modelBuilder.Entity("Viho.web.DataDB.TbExpense", b =>
                {
                    b.Property<int>("EId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("e_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EId"));

                    b.Property<double>("EAmount")
                        .HasColumnType("float")
                        .HasColumnName("e_amount");

                    b.Property<string>("ECat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("e_cat");

                    b.Property<DateTime>("EDate")
                        .HasColumnType("date")
                        .HasColumnName("e_date");

                    b.Property<string>("EDetail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("e_detail");

                    b.HasKey("EId");

                    b.ToTable("tb_expenses", (string)null);
                });

            modelBuilder.Entity("Viho.web.DataDB.TbInventory", b =>
                {
                    b.Property<int>("IId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("i_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IId"));

                    b.Property<string>("IItem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("i_item");

                    b.Property<int>("ILocationid")
                        .HasColumnType("int")
                        .HasColumnName("i_locationid");

                    b.Property<int>("IQuantity")
                        .HasColumnType("int")
                        .HasColumnName("i_quantity");

                    b.HasKey("IId");

                    b.HasIndex("ILocationid");

                    b.ToTable("tb_inventory", (string)null);
                });

            modelBuilder.Entity("Viho.web.DataDB.TbLocation", b =>
                {
                    b.Property<int>("LId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("l_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LId"));

                    b.Property<string>("LAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("l_address");

                    b.HasKey("LId");

                    b.ToTable("tb_location", (string)null);
                });

            modelBuilder.Entity("Viho.web.DataDB.TbPayment", b =>
                {
                    b.Property<int>("PId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("p_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PId"));

                    b.Property<double>("PAmount")
                        .HasColumnType("float")
                        .HasColumnName("p_amount");

                    b.Property<DateTime>("PDate")
                        .HasColumnType("date")
                        .HasColumnName("p_date");

                    b.Property<int>("PTenantid")
                        .HasColumnType("int")
                        .HasColumnName("p_tenantid");

                    b.Property<string>("PType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("p_type");

                    b.HasKey("PId");

                    b.HasIndex("PTenantid");

                    b.ToTable("tb_payment", (string)null);
                });

            modelBuilder.Entity("Viho.web.DataDB.TbRole", b =>
                {
                    b.Property<int>("RlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rl_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RlId"));

                    b.Property<string>("RlDesc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("rl_desc");

                    b.HasKey("RlId");

                    b.ToTable("tb_role", (string)null);
                });

            modelBuilder.Entity("Viho.web.DataDB.TbRoom", b =>
                {
                    b.Property<int>("RId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("r_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RId"));

                    b.Property<double>("RDepositAmount")
                        .HasColumnType("float")
                        .HasColumnName("r_depositAmount");

                    b.Property<string>("RDesc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("r_desc");

                    b.Property<string>("RImg1")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("r_img1");

                    b.Property<string>("RImg2")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("r_img2");

                    b.Property<string>("RImg3")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("r_img3");

                    b.Property<string>("RImg4")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("r_img4");

                    b.Property<string>("RImg5")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("r_img5");

                    b.Property<int>("RLocationid")
                        .HasColumnType("int")
                        .HasColumnName("r_locationid");

                    b.Property<int>("RNo")
                        .HasColumnType("int")
                        .HasColumnName("r_no");

                    b.Property<double>("RPrice")
                        .HasColumnType("float")
                        .HasColumnName("r_price");

                    b.Property<string>("RStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("r_status");

                    b.Property<string>("RType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("r_type");

                    b.HasKey("RId");

                    b.HasIndex("RLocationid");

                    b.ToTable("tb_room", (string)null);
                });

            modelBuilder.Entity("Viho.web.DataDB.TbSale", b =>
                {
                    b.Property<int>("SId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("s_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SId"));

                    b.Property<int>("SExid")
                        .HasColumnType("int")
                        .HasColumnName("s_exid");

                    b.Property<int>("SPaymentid")
                        .HasColumnType("int")
                        .HasColumnName("s_paymentid");

                    b.Property<double>("SProfitamount")
                        .HasColumnType("float")
                        .HasColumnName("s_profitamount");

                    b.HasKey("SId");

                    b.HasIndex("SExid");

                    b.HasIndex("SPaymentid");

                    b.ToTable("tb_sales", (string)null);
                });

            modelBuilder.Entity("Viho.web.DataDB.TbTenant", b =>
                {
                    b.Property<int>("TId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("t_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TId"));

                    b.Property<string>("TAddOnDetail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("t_addOnDetail");

                    b.Property<string>("TAddress")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("t_address");

                    b.Property<string>("TAgreement")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("t_agreement");

                    b.Property<string>("TCardCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("t_cardCode");

                    b.Property<string>("TEmerContact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("t_emerContact");

                    b.Property<DateTime>("TEntrydate")
                        .HasColumnType("datetime")
                        .HasColumnName("t_entrydate");

                    b.Property<DateTime?>("TExitdate")
                        .HasColumnType("datetime")
                        .HasColumnName("t_exitdate");

                    b.Property<string>("TIc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("t_ic");

                    b.Property<DateTime?>("TLastReminderDate")
                        .HasColumnType("datetime")
                        .HasColumnName("t_LastReminderDate");

                    b.Property<string>("TName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("t_name");

                    b.Property<string>("TPaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("t_paymentStatus");

                    b.Property<string>("TPhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("t_phone");

                    b.Property<int>("TRoomid")
                        .HasColumnType("int")
                        .HasColumnName("t_roomid");

                    b.Property<string>("TUploadIc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("t_uploadIC");

                    b.HasKey("TId");

                    b.HasIndex("TRoomid");

                    b.ToTable("tb_tenants", (string)null);
                });

            modelBuilder.Entity("Viho.web.DataDB.TbUser", b =>
                {
                    b.Property<int>("UId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("u_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UId"));

                    b.Property<string>("UEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("u_email");

                    b.Property<string>("UPass")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("u_pass");

                    b.Property<string>("UPhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("u_phone");

                    b.Property<int>("URoleid")
                        .HasColumnType("int")
                        .HasColumnName("u_roleid");

                    b.Property<string>("UUsername")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("u_username");

                    b.HasKey("UId");

                    b.HasIndex("URoleid");

                    b.ToTable("tb_user", (string)null);
                });

            modelBuilder.Entity("Viho.web.DataDB.Reminder", b =>
                {
                    b.HasOne("Viho.web.DataDB.TbTenant", "Tenant")
                        .WithMany("Reminders")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Viho.web.DataDB.TbAttendance", b =>
                {
                    b.HasOne("Viho.web.DataDB.TbLocation", "AttL")
                        .WithMany("TbAttendances")
                        .HasForeignKey("AttLid")
                        .IsRequired()
                        .HasConstraintName("FK_tb_attendance_tb_location");

                    b.Navigation("AttL");
                });

            modelBuilder.Entity("Viho.web.DataDB.TbInventory", b =>
                {
                    b.HasOne("Viho.web.DataDB.TbLocation", "ILocation")
                        .WithMany("TbInventories")
                        .HasForeignKey("ILocationid")
                        .IsRequired()
                        .HasConstraintName("FK_tb_inventory_tb_location");

                    b.Navigation("ILocation");
                });

            modelBuilder.Entity("Viho.web.DataDB.TbPayment", b =>
                {
                    b.HasOne("Viho.web.DataDB.TbTenant", "PTenant")
                        .WithMany("TbPayments")
                        .HasForeignKey("PTenantid")
                        .IsRequired()
                        .HasConstraintName("FK_tb_payment_tb_tenants");

                    b.Navigation("PTenant");
                });

            modelBuilder.Entity("Viho.web.DataDB.TbRoom", b =>
                {
                    b.HasOne("Viho.web.DataDB.TbLocation", "RLocation")
                        .WithMany("TbRooms")
                        .HasForeignKey("RLocationid")
                        .IsRequired()
                        .HasConstraintName("FK_tb_room_tb_location");

                    b.Navigation("RLocation");
                });

            modelBuilder.Entity("Viho.web.DataDB.TbSale", b =>
                {
                    b.HasOne("Viho.web.DataDB.TbExpense", "SEx")
                        .WithMany("TbSales")
                        .HasForeignKey("SExid")
                        .IsRequired()
                        .HasConstraintName("FK_tb_sales_tb_expenses");

                    b.HasOne("Viho.web.DataDB.TbPayment", "SPayment")
                        .WithMany("TbSales")
                        .HasForeignKey("SPaymentid")
                        .IsRequired()
                        .HasConstraintName("FK_tb_sales_tb_payment");

                    b.Navigation("SEx");

                    b.Navigation("SPayment");
                });

            modelBuilder.Entity("Viho.web.DataDB.TbTenant", b =>
                {
                    b.HasOne("Viho.web.DataDB.TbRoom", "TRoom")
                        .WithMany("TbTenants")
                        .HasForeignKey("TRoomid")
                        .IsRequired()
                        .HasConstraintName("FK_tb_tenants_tb_room");

                    b.Navigation("TRoom");
                });

            modelBuilder.Entity("Viho.web.DataDB.TbUser", b =>
                {
                    b.HasOne("Viho.web.DataDB.TbRole", "URole")
                        .WithMany("TbUsers")
                        .HasForeignKey("URoleid")
                        .IsRequired()
                        .HasConstraintName("FK_tb_user_tb_role");

                    b.Navigation("URole");
                });

            modelBuilder.Entity("Viho.web.DataDB.TbExpense", b =>
                {
                    b.Navigation("TbSales");
                });

            modelBuilder.Entity("Viho.web.DataDB.TbLocation", b =>
                {
                    b.Navigation("TbAttendances");

                    b.Navigation("TbInventories");

                    b.Navigation("TbRooms");
                });

            modelBuilder.Entity("Viho.web.DataDB.TbPayment", b =>
                {
                    b.Navigation("TbSales");
                });

            modelBuilder.Entity("Viho.web.DataDB.TbRole", b =>
                {
                    b.Navigation("TbUsers");
                });

            modelBuilder.Entity("Viho.web.DataDB.TbRoom", b =>
                {
                    b.Navigation("TbTenants");
                });

            modelBuilder.Entity("Viho.web.DataDB.TbTenant", b =>
                {
                    b.Navigation("Reminders");

                    b.Navigation("TbPayments");
                });
#pragma warning restore 612, 618
        }
    }
}
